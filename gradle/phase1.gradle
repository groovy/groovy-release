task checkout {
    group = "Pre-vote phase"
    description = "Checks out the Apache Groovy sources (assumes -Pbranch=branch_to_release)"
    doLast {
        assert rootProject.hasProperty('branch')
        rootProject.ext.branch = rootProject.getProperty('branch')
        // fresh clone may be overkill but take safe option for now
        rootProject.ext.stagingDir = "$project.buildDir/staging-$branch/"
        def grgit
        if (rootProject.hasProperty('skipClone')) {
            grgit = grgitClass.open(dir: stagingDir)
        } else {
            println "Cloning $repoUri to $stagingDir. This may take a few minutes ..."
            grgit = grgitClass.clone(dir: stagingDir, uri: repoUri, refToCheckout: branch)
        }
        grgit.checkout(branch: rootProject.getProperty('branch'))
        def id = grgit.head().abbreviatedId
        def message = grgit.head().shortMessage
        def dir = file(stagingDir)
        assert !dir.isFile() && dir.listFiles()
        println "Checked out: $grgit.branch.current.name @ $id ($message)"
    }
}

task confirmVersion {
    group = "Pre-vote phase"
    description = "Confirm version to release (assumes -PreleaseVersion=version_to_release)"
    dependsOn checkout
    doLast {
        assert rootProject.hasProperty('releaseVersion')
        rootProject.ext.relVersion = rootProject.getProperty('releaseVersion')
        def propsFile = file("$rootProject.ext.stagingDir/gradle.properties")
        def propsText = propsFile.text
        assert propsText.contains(relVersion + '-SNAPSHOT') && propsText.contains(relVersion + '.SNAPSHOT')
    }
}

task createReleaseBranch {
    group = "Pre-vote phase"
    description = "Creates a release branch"
    dependsOn confirmVersion
    doLast {
        def grgit = grgitClass.open(dir: stagingDir)
        grgit.checkout(branch: "REL-BRANCH-$relVersion", startPoint: branch, createBranch: true)
        println "Checked out: $grgit.branch.current.name"
    }
}

task updateVersionProperties {
    group = "Pre-vote phase"
    description = "Promotes versions to non SNAPSHOT in gradle.properties and commits the result"
    dependsOn createReleaseBranch
    doLast {
        def propsFile = file("$rootProject.ext.stagingDir/gradle.properties")
        def propsText = propsFile.text
        propsText = propsText.replace(relVersion + '-SNAPSHOT', relVersion)
        propsText = propsText.replace(relVersion + '.SNAPSHOT', relVersion)
        propsFile.text = propsText
        def grgit = grgitClass.open(dir: stagingDir)
        grgit.add(patterns: ['gradle.properties'])
        def commit = grgit.commit(message: "Release $relVersion: update versions")
        println "@ $commit.abbreviatedId ($commit.shortMessage)"
    }
}

task buildAndUpload {
    group = "Pre-vote phase"
    description = "Builds Apache Groovy and publishes the Maven artifacts to the staging repository on Bintray"
    // tasks: install dist artifactoryPublish
    dependsOn updateVersionProperties
}

task createSvnTreeStructure {
    group = "Pre-vote phase"
    description = "Creates the required tree structure for artifacts (sources, binaries, sdk and documentation) before uploading them to the Apache servers"
    dependsOn buildAndUpload
}

task signDistribution {
    group = "Pre-vote phase"
    description = "Signs the artifacts"
    dependsOn createSvnTreeStructure
}

task createChecksums {
    group = "Pre-vote phase"
    description = "Creates SHA-256 checksums for all artifacts"
    dependsOn signDistribution
}

task uploadToApacheDevServers {
    group = "Pre-vote phase"
    description = "Pushes the artifacts to the Apache DEV subversion repository"
    dependsOn createChecksums
}

task createAndPushTag {
    group = "Pre-vote phase"
    description = "Creates a release tag and pushes it to the Apache Git repository"
    dependsOn uploadToApacheDevServers
}

task releaseOnJira {
    group = "Pre-vote phase"
    description = "Releases the version on JIRA"
    dependsOn createAndPushTag
}

task prepareVoteThread {
    group = "Pre-vote phase"
    description = "Generates a [VOTE] thread to be tweaked and sent to the dev@ mailing list"
    dependsOn releaseOnJira
}


